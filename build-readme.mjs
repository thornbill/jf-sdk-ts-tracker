import fs from 'node:fs/promises';

import metadata from './metadata.json' assert { type: 'json' };

(async () => {
	let metadataTable = `| Version | Build Size (Parcel) | Build Size (Rollup) |
|---|---|---|`;
	metadata.forEach(meta => {
		const flatBuilds = meta.builds.reduce((acc, build) => {
			acc[build.tool] = build.size;
			return acc;
		}, {});
		metadataTable += `\n| ${meta.version} | ${flatBuilds.parcel} | ${flatBuilds.rollup} |`;
	});

	const markdown =
`
# jellyfin-sdk-typescript Build Tracker

This project builds a minimal app with each version of the \`@jellyfin/sdk\` npm package with different build tools to track changes in build size.

> [!NOTE]
> This file is automatically generated based on the contents of the \`metadata.json\` file.
> Update \`build-readme.mjs\` to make any changes.

${metadataTable}
`;

	try {
		await fs.writeFile('README.md', markdown);
	} catch (err) {
		console.error(err);
	}
})();
